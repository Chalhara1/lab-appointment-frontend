{"ast":null,"code":"var _jsxFileName = \"/Users/warunapradeep/Documents/Medical_Lab_Appointment_frontend/labapointment/src/admin/AllTestResults.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table } from 'react-bootstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AllTestResults() {\n  _s();\n  const [testResults, setTestResults] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:8080/api/test-results/all').then(response => {\n      console.log(response.data); // Log the response data\n      setTestResults(response.data); // Set test results\n    }).catch(error => {\n      console.error('Error fetching test results:', error);\n    });\n  }, []); // Fetch test results only once when component mounts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Test Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Test Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Result\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Patient Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Contact Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: testResults.length > 0 ? testResults.map(testResult => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: testResult.testName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: testResult.result\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [testResult.patient.firstName, \" \", testResult.patient.lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: testResult.patient.contactNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this)]\n        }, testResult.testResultId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"4\",\n            children: \"No test results available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(AllTestResults, \"oQkLQt3iM/ftY2yxJsKYfKEc7AI=\");\n_c = AllTestResults;\nexport default AllTestResults;\nvar _c;\n$RefreshReg$(_c, \"AllTestResults\");","map":{"version":3,"names":["React","useState","useEffect","Table","axios","jsxDEV","_jsxDEV","AllTestResults","_s","testResults","setTestResults","get","then","response","console","log","data","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","striped","bordered","hover","length","map","testResult","testName","result","patient","firstName","lastName","contactNumber","testResultId","colSpan","_c","$RefreshReg$"],"sources":["/Users/warunapradeep/Documents/Medical_Lab_Appointment_frontend/labapointment/src/admin/AllTestResults.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Table } from 'react-bootstrap';\nimport axios from 'axios';\n\nfunction AllTestResults() {\n  const [testResults, setTestResults] = useState([]);\n\n  useEffect(() => {\n    axios.get('http://localhost:8080/api/test-results/all')\n      .then(response => {\n        console.log(response.data); // Log the response data\n        setTestResults(response.data); // Set test results\n      })\n      .catch(error => {\n        console.error('Error fetching test results:', error);\n      });\n  }, []); // Fetch test results only once when component mounts\n\n  return (\n    <div className=\"p-4 mt-5\">\n      <h2>All Test Results</h2>\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>Test Name</th>\n            <th>Result</th>\n            <th>Patient Name</th>\n            <th>Contact Number</th>\n          </tr>\n        </thead>\n        <tbody>\n          {testResults.length > 0 ? (\n            testResults.map(testResult => (\n              <tr key={testResult.testResultId}>\n                <td>{testResult.testName}</td>\n                <td>{testResult.result}</td>\n                <td>{testResult.patient.firstName} {testResult.patient.lastName}</td>\n                <td>{testResult.patient.contactNumber}</td>\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td colSpan=\"4\">No test results available</td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n\nexport default AllTestResults;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}