{"ast":null,"code":"var _jsxFileName = \"/Users/warunapradeep/Documents/Medical_Lab_Appointment_frontend/labapointment/src/ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Route, Navigate } from 'react-router-dom';\nimport { useCookies } from 'react-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  element,\n  ...rest\n}) => {\n  _s();\n  const [cookies] = useCookies(['patientId']); // Check for the presence of the cookie\n\n  return cookies.patientId ?\n  /*#__PURE__*/\n  // If the cookie exists\n  _jsxDEV(Route, {\n    ...rest,\n    element: element\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this) :\n  /*#__PURE__*/\n  // If the cookie doesn't exist, redirect to the login page\n  _jsxDEV(Navigate, {\n    to: \"/login\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_s(ProtectedRoute, \"KWItf4Qn7XyeOw4JKNC6dqw2Uu4=\", false, function () {\n  return [useCookies];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Route","Navigate","useCookies","jsxDEV","_jsxDEV","ProtectedRoute","element","rest","_s","cookies","patientId","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["/Users/warunapradeep/Documents/Medical_Lab_Appointment_frontend/labapointment/src/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\nimport { Route, Navigate } from 'react-router-dom';\nimport { useCookies } from 'react-cookie';\n\nconst ProtectedRoute = ({ element, ...rest }) => {\n  const [cookies] = useCookies(['patientId']); // Check for the presence of the cookie\n\n  return cookies.patientId ? ( // If the cookie exists\n    <Route {...rest} element={element} />\n  ) : ( // If the cookie doesn't exist, redirect to the login page\n    <Navigate to=\"/login\" replace />\n  );\n};\n\nexport default ProtectedRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAClD,SAASC,UAAU,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,cAAc,GAAGA,CAAC;EAAEC,OAAO;EAAE,GAAGC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,OAAO,CAAC,GAAGP,UAAU,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;;EAE7C,OAAOO,OAAO,CAACC,SAAS;EAAA;EAAK;EAC3BN,OAAA,CAACJ,KAAK;IAAA,GAAKO,IAAI;IAAED,OAAO,EAAEA;EAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAAA;EACjC;EACJV,OAAA,CAACH,QAAQ;IAACc,EAAE,EAAC,QAAQ;IAACC,OAAO;EAAA;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAChC;AACH,CAAC;AAACN,EAAA,CARIH,cAAc;EAAA,QACAH,UAAU;AAAA;AAAAe,EAAA,GADxBZ,cAAc;AAUpB,eAAeA,cAAc;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}