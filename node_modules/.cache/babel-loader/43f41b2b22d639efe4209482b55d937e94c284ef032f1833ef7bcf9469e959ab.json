{"ast":null,"code":"var _jsxFileName = \"/Users/warunapradeep/Documents/Medical_Lab_Appointment_frontend/labapointment/src/admin/UpdateModal.js\",\n  _s = $RefreshSig$();\n// UpdateModal.js\n\nimport React, { useState } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UpdateModal({\n  show,\n  handleClose,\n  testResult,\n  handleUpdate\n}) {\n  _s();\n  const [updatedTestName, setUpdatedTestName] = useState(testResult.testName);\n  const [updatedResult, setUpdatedResult] = useState(testResult.result);\n  const handleUpdateClick = () => {\n    handleUpdate(testResult.testResultId, {\n      testName: updatedTestName,\n      result: updatedResult\n    });\n    handleClose();\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Update Test Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formTestName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Test Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: updatedTestName,\n            onChange: e => setUpdatedTestName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formResult\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Result\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: updatedResult,\n            onChange: e => setUpdatedResult(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: handleClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleUpdateClick,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(UpdateModal, \"aa7XLCcffAcQBNDyAQCz3Q+Jya0=\");\n_c = UpdateModal;\nexport default UpdateModal;\nvar _c;\n$RefreshReg$(_c, \"UpdateModal\");","map":{"version":3,"names":["React","useState","Modal","Button","Form","jsxDEV","_jsxDEV","UpdateModal","show","handleClose","testResult","handleUpdate","_s","updatedTestName","setUpdatedTestName","testName","updatedResult","setUpdatedResult","result","handleUpdateClick","testResultId","onHide","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","Group","controlId","Label","Control","type","value","onChange","e","target","Footer","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/warunapradeep/Documents/Medical_Lab_Appointment_frontend/labapointment/src/admin/UpdateModal.js"],"sourcesContent":["// UpdateModal.js\n\nimport React, { useState } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap';\n\nfunction UpdateModal({ show, handleClose, testResult, handleUpdate }) {\n  const [updatedTestName, setUpdatedTestName] = useState(testResult.testName);\n  const [updatedResult, setUpdatedResult] = useState(testResult.result);\n\n  const handleUpdateClick = () => {\n    handleUpdate(testResult.testResultId, { testName: updatedTestName, result: updatedResult });\n    handleClose();\n  };\n\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Update Test Result</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Group controlId=\"formTestName\">\n            <Form.Label>Test Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              value={updatedTestName}\n              onChange={(e) => setUpdatedTestName(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formResult\">\n            <Form.Label>Result</Form.Label>\n            <Form.Control\n              type=\"text\"\n              value={updatedResult}\n              onChange={(e) => setUpdatedResult(e.target.value)}\n            />\n          </Form.Group>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button>\n        <Button variant=\"primary\" onClick={handleUpdateClick}>\n          Update\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default UpdateModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}